// <auto-generated />
using System;
using AperoBoxApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AperoBoxApi.Migrations
{
    [DbContext(typeof(AperoBoxApi_dbContext))]
    [Migration("20191214023908_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AperoBoxApi.Models.Adresse", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CodePostal")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Localite")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal>("Numero")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Adresse","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Box", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Affichable")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(350)")
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<decimal>("PrixUnitaireHtva")
                        .HasColumnName("PrixUnitaireHTVA")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Promotion")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("Tva")
                        .HasColumnName("TVA")
                        .HasColumnType("numeric(18, 3)");

                    b.HasKey("Id");

                    b.ToTable("Box","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Commande", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Adresse")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date");

                    b.Property<decimal>("Promotion")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("Utilisateur")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Adresse");

                    b.HasIndex("Utilisateur");

                    b.ToTable("Commande","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Commentaire", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Box")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<decimal>("Utilisateur")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Box");

                    b.HasIndex("Utilisateur");

                    b.ToTable("Commentaire","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.LigneCommande", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Box")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Commande")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Produit")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Box");

                    b.HasIndex("Commande");

                    b.HasIndex("Produit");

                    b.ToTable("LigneCommande","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.LigneProduit", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Box")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Produit")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Box");

                    b.HasIndex("Produit");

                    b.ToTable("LigneProduit","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Produit", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Alcool")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DatePeremption")
                        .HasColumnType("date");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("PrixUnitaireHtva")
                        .HasColumnName("PrixUnitaireHTVA")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("Tva")
                        .HasColumnName("TVA")
                        .HasColumnType("numeric(6, 6)");

                    b.HasKey("Id");

                    b.ToTable("Produit","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Role", b =>
                {
                    b.Property<string>("Nom")
                        .HasColumnType("varchar(450)")
                        .HasMaxLength(450)
                        .IsUnicode(false);

                    b.HasKey("Nom");

                    b.ToTable("Role","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Utilisateur", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Adresse")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date");

                    b.Property<decimal>("Gsm")
                        .HasColumnName("GSM")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Telephone")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Adresse");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("UNIQUE_Utilisateur_Username");

                    b.ToTable("Utilisateur","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.UtilisateurRole", b =>
                {
                    b.Property<string>("IdRole")
                        .HasColumnType("varchar(450)")
                        .HasMaxLength(450)
                        .IsUnicode(false);

                    b.Property<decimal>("IdUtilisateur")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("IdRole", "IdUtilisateur");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("UtilisateurRole","apero");
                });

            modelBuilder.Entity("AperoBoxApi.Models.Commande", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Adresse", "AdresseNavigation")
                        .WithMany("Commande")
                        .HasForeignKey("Adresse")
                        .HasConstraintName("Fk_Commande_Adresse")
                        .IsRequired();

                    b.HasOne("AperoBoxApi.Models.Utilisateur", "UtilisateurNavigation")
                        .WithMany("Commande")
                        .HasForeignKey("Utilisateur")
                        .HasConstraintName("Fk_Commande_Utilisateur")
                        .IsRequired();
                });

            modelBuilder.Entity("AperoBoxApi.Models.Commentaire", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Box", "BoxNavigation")
                        .WithMany("Commentaire")
                        .HasForeignKey("Box")
                        .HasConstraintName("Fk_Commentaire_Box")
                        .IsRequired();

                    b.HasOne("AperoBoxApi.Models.Utilisateur", "UtilisateurNavigation")
                        .WithMany("Commentaire")
                        .HasForeignKey("Utilisateur")
                        .HasConstraintName("Fk_Commentaire_Utilisateur")
                        .IsRequired();
                });

            modelBuilder.Entity("AperoBoxApi.Models.LigneCommande", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Box", "BoxNavigation")
                        .WithMany("LigneCommande")
                        .HasForeignKey("Box")
                        .HasConstraintName("Fk_LigneCommande_Box");

                    b.HasOne("AperoBoxApi.Models.Commande", "CommandeNavigation")
                        .WithMany("LigneCommande")
                        .HasForeignKey("Commande")
                        .HasConstraintName("Fk_LigneCommande_Commande")
                        .IsRequired();

                    b.HasOne("AperoBoxApi.Models.Produit", "ProduitNavigation")
                        .WithMany("LigneCommande")
                        .HasForeignKey("Produit")
                        .HasConstraintName("Fk_LigneCommande_Produit");
                });

            modelBuilder.Entity("AperoBoxApi.Models.LigneProduit", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Box", "BoxNavigation")
                        .WithMany("LigneProduit")
                        .HasForeignKey("Box")
                        .HasConstraintName("Fk_LigneProduit_Box")
                        .IsRequired();

                    b.HasOne("AperoBoxApi.Models.Produit", "ProduitNavigation")
                        .WithMany("LigneProduit")
                        .HasForeignKey("Produit")
                        .HasConstraintName("Fk_LigneProduit_Produit")
                        .IsRequired();
                });

            modelBuilder.Entity("AperoBoxApi.Models.Utilisateur", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Adresse", "AdresseNavigation")
                        .WithMany("Utilisateur")
                        .HasForeignKey("Adresse")
                        .HasConstraintName("Fk_Utilisateur_Adresse")
                        .IsRequired();
                });

            modelBuilder.Entity("AperoBoxApi.Models.UtilisateurRole", b =>
                {
                    b.HasOne("AperoBoxApi.Models.Role", "IdRoleNavigation")
                        .WithMany("UtilisateurRole")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AperoBoxApi.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("UtilisateurRole")
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
